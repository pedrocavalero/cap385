<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

<!-- Enable AspectJ style of Spring AOP -->
<aop:aspectj-autoproxy />
<!-- Allows injection using @Autowired -->
<context:annotation-config />
<!-- Allows Bean declaration using @Component -->
<context:component-scan base-package="com.pedrocavalero" />

<!-- <bean name="xmlConfigAspect" class="com.pedrocavalero.spring.aspect.XMLConfigAspect" /> -->

<!-- Spring AOP XML Configuration -->
<!-- <aop:config> -->
<!-- 	<aop:aspect ref="xmlConfigAspect" id="employeeXMLConfigAspectID" order="1"> -->
<!-- 		<aop:pointcut expression="execution(* com.pedrocavalero.spring.model.Employee.getName())" id="getNamePointcut"/> -->
<!-- 		<aop:around method="employeeAroundAdvice" pointcut-ref="getNamePointcut" arg-names="proceedingJoinPoint"/> -->
<!-- 	</aop:aspect> -->
<!-- </aop:config> -->
</beans>
